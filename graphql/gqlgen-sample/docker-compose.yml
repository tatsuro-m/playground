version: "3.8"

services:
  db:
    platform: linux/x86_64
    image: mysql:8.0.26
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: dev
    volumes:
      - ./graphql/tmp/db/data:/var/lib/mysql
      - ./graphql/initdb:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"

  server:
    build:
      context: ./graphql
      dockerfile: docker/Dockerfile
      target: dev
    volumes:
      - ./graphql/:/go/src/app
    tty: true
    stdin_open: true
    environment:
      DB_HOST: db
      DB_NAME: dev
      DB_USER: root
      DB_PASSWORD: password
      BOIL_DEBUG: true
      GOOGLE_APPLICATION_CREDENTIALS: /go/src/app/credentials/stg-firebase-service-account.json
    depends_on:
      - db
    ports:
      - "8080:8080"

  # 本来このサービスは不要だが、 gqlgen を動かす時に必要ライブラリがインストールされておらず失敗する不具合があるので効率化のために設定
  # generate する時はこのサービスを利用して自動生成を行う
  gqlgen_generator:
    build:
      context: ./graphql
      dockerfile: docker/Dockerfile
      target: dev
    volumes:
      - ./graphql/:/go/src/app
    tty: true
    stdin_open: true
    command: sh -c "go get github.com/99designs/gqlgen/cmd@v0.14.0 && go run github.com/99designs/gqlgen && go mod tidy"

  migration:
    build:
      context: ./graphql
      dockerfile: docker/migration.dockerfile
    tty: true
    stdin_open: true
    volumes:
      - ./graphql/migrations/:/go/src/app/migrations
    # マイグレーションファイル作成コマンド: migrate create -ext sql -dir migrations/ -seq file_name
    # down バージョン sh -c "migrate -database mysql://root:password@tcp\(db:3306\)/dev -path migrations/ down && migrate -database mysql://root:password@tcp\(db:3306\)/test -path migrations/ down"
    command: sh -c "migrate -database mysql://root:password@tcp\(db:3306\)/dev -path migrations/ up && migrate -database mysql://root:password@tcp\(db:3306\)/test -path migrations/ up"
    depends_on:
      - db

  boiler:
    build:
      context: ./graphql
      dockerfile: docker/boiler.dockerfile
    tty: true
    stdin_open: true
    volumes:
      - ./graphql/:/go/src/app
    depends_on:
      - db

  test:
    build:
      context: ./graphql
      dockerfile: docker/test.dockerfile
    environment:
      DB_HOST: db
      DB_NAME: test
      DB_USER: root
      DB_PASSWORD: password
      TEST_ENV: 1
    tty: true
    stdin_open: true
    command: go test -v ./...
    volumes:
      - ./graphql/:/go/src/app
    depends_on:
      - db
